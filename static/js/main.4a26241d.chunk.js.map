{"version":3,"sources":["Components/NewTimerModal/NewTimerModal.js","Components/Timer/Timer.js","Components/TimerCard/TimerCard.js","App.js","reportWebVitals.js","index.js"],"names":["NewTimerModal","addNewTimer","timers","useState","open","setOpen","newTitle","setNewTitle","hours","setHours","minutes","setMinutes","seconds","setSeconds","btnTextSize","setBtnTextSize","handleClose","resetAllValues","handleNewTimerChange","e","target","value","length","substring","name","useEffect","temp","document","getElementById","style","height","backgroundColor","paddingBottom","window","innerHeight","background","padding","Button","fontSize","id","color","fullWidth","variant","onClick","Modal","onClose","display","justifyContent","marginTop","className","onSubmit","preventDefault","alert","uuid","title","timer","parseInt","flexDirection","TextField","label","onChange","type","toString","padStart","Timer","hoursMinSecs","removeTimerWhenFinished","resetTimer","handleResetTimer","isPaused","hrs","mins","secs","setTime","tick","timerId","setInterval","clearInterval","TimerCard","setResetTimer","setIsPaused","Fab","aria-label","App","setTimers","filter","obj","prev","map","time","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a26241d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport \"./styles.css\";\n\nimport uuid from \"uuid\";\n\n// MUI COMPONENTS\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from '@material-ui/core/TextField'\n\nconst NewTimerModal = ({ addNewTimer, timers }) => {\n  const [open, setOpen] = useState(false);\n  const [newTitle, setNewTitle] = useState('')\n  const [hours, setHours] = useState(0)\n  const [minutes, setMinutes] = useState(0)\n  const [seconds, setSeconds] = useState(0)\n  const [btnTextSize, setBtnTextSize] = useState('')\n  \n  // OPENS & CLOSES MODAL\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  // REINITIALIZE ALL VALUES TO 0\n  const resetAllValues = () =>{\n    setNewTitle('')\n    setHours(0)\n    setMinutes(0)\n    setSeconds(0)\n  }\n\n  // UPDATES WITH USER TITLE PARAM\n  const handleNewTitleChange = (e) =>{\n    setNewTitle(e.target.value)\n  }\n\n  // UPDATES WITH USER TIMER PARAMS\n  const handleNewTimerChange = (e) => {\n    // limits string length to 2\n    if(e.target.value.length > 2){\n      e.target.value = e.target.value.substring(1)\n    }\n    if(e.target.name === 'hours'){\n      setHours(e.target.value)\n    }else if (e.target.name === 'minutes' && e.target.value <= 60){\n      setMinutes(e.target.value)\n    }else if (e.target.name === 'seconds' && e.target.value <= 60){\n      setSeconds(e.target.value)\n    }\n  }\n\n  // PUSHES USER FORM DATA UP TO APP\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    if(newTitle.length === 0){\n      alert('Please enter a title')\n    }else if(hours <= 0 && minutes <= 0 && seconds <= 0){\n      alert('Please enter a valid time')\n    }else{\n      addNewTimer({id: uuid(), title: newTitle, timer:{hours:parseInt(hours), minutes:parseInt(minutes), seconds:parseInt(seconds)}})\n      handleClose()\n      resetAllValues()\n    }\n  }\n\n  useEffect(() =>{\n    let temp = document.getElementById('createsNewTimer')\n    if(timers.length < 1){\n      temp.style.height = '100vh'\n      temp.style.backgroundColor ='#181A18'\n      temp.style.paddingBottom = '20rem'\n      setBtnTextSize(window.innerHeight / 20)\n    }else{\n      temp.style.height = '8vh'\n      temp.style.paddingBottom = '0'\n      temp.style.background ='linear-gradient(to bottom, #0f2027, #203a43, #2c5364)'\n      temp.style.padding = '2rem'\n      setBtnTextSize(window.innerHeight / 40)\n    }\n  }, [timers.length])\n\n\n  return (\n    <div>\n      <Button style={{fontSize:btnTextSize}} id='createsNewTimer' color='primary' fullWidth={true} variant='contained' onClick={handleOpen}>\n        <AddIcon/>\n        <p>Add More timers</p>\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        style={{display:'flex', justifyContent:'center', marginTop:'8rem'}}\n      >\n        <div className='modalContainer'>\n          <form onSubmit={handleSubmit} style={{display:'flex', flexDirection:'column'}}>\n            <TextField variant=\"outlined\" label=\"New Title\" value={newTitle} onChange={handleNewTitleChange}/>\n            <div className='modalTimeFields'>\n              <TextField type=\"number\" name=\"hours\" label=\"hours\" value={hours.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>:\n              <TextField type=\"number\" name=\"minutes\" label=\"minutes\" value={minutes.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>:\n              <TextField type=\"number\" name=\"seconds\" label=\"seconds\" value={seconds.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>\n            </div>\n            <Button type='submit' variant='contained' color='primary'>START</Button>\n          </form>\n          <Button onClick={resetAllValues}>Clear</Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewTimerModal","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\nconst Timer = ({\n  hoursMinSecs,\n  title,\n  id,\n  removeTimerWhenFinished,\n  resetTimer,\n  handleResetTimer,\n  isPaused,\n}) => {\n  const { hours, minutes, seconds } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = useState([hours, minutes, seconds]);\n\n  // CALLS FUNCTION TO REMOVE TIMER FROM ARR\n  const handleRemovingTimer = () => {\n    removeTimerWhenFinished(id);\n  };\n\n  // RESET FUNCTION\n  const reset = () => {\n    setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n  };\n\n  // TICKS by 1 second, every second\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) {\n      handleRemovingTimer();\n    } else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  // CALLS FUNCTION TO RESET\n  useEffect(() => {\n    if (resetTimer) {\n      handleResetTimer();\n      reset();\n    }\n  });\n\n  // TICK ONLY WHEN isPaused IS FALSE\n  useEffect(() => {\n    if (!isPaused) {\n      const timerId = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerId);\n    }\n  });\n\n  return (\n    <div>\n      <p className=\"timetext\">{`${hrs.toString().padStart(2, \"0\")}:${mins\n        .toString()\n        .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`}</p>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// CUSTOM COMPONENTS\nimport Timer from \"../Timer/Timer\";\n\n// MUI COMPONENTS\nimport Fab from \"@material-ui/core/Fab\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\n\nconst TimerCard = ({ timer, title, id, removeTimerWhenFinished }) => {\n  const [resetTimer, setResetTimer] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n\n  // SHOULD RESTART/LOOPS returns BOOL\n  const handleResetTimer = () => {\n    setResetTimer(!resetTimer);\n  };\n\n  // SHOULD PAUSE/PLAYS returns BOOL\n  const pausePlay = () => {\n    setIsPaused(!isPaused);\n  };\n  \n  return (\n    <div className=\"cardContainer\" id={title}>\n      <Timer\n        hoursMinSecs={timer}\n        title={title}\n        id={id}\n        removeTimerWhenFinished={removeTimerWhenFinished}\n        resetTimer={resetTimer}\n        isPaused={isPaused}\n        handleResetTimer={handleResetTimer}\n      />\n      <hr className=\"cardDivider\" />\n      <h5 className=\"cardTitle\">{title}</h5>\n      <div className=\"cardBtns\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleResetTimer}>\n          <LoopIcon />\n        </Fab>\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={pausePlay}>\n          {isPaused ? <PlayArrowIcon /> : <PauseIcon />}\n        </Fab>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerCard;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// CUSTOM COMPONENTS\nimport NewTimerModal from \"./Components/NewTimerModal/NewTimerModal\";\nimport TimerCard from \"./Components/TimerCard/TimerCard\";\n\nfunction App() {\n  const [timers, setTimers] = useState([]);\n\n  // ADDS NEW TIMER TO ARR\n  const addNewTimer = (obj) =>{\n    setTimers(prev =>{\n      return [obj, ...prev]\n    })\n  }\n\n  // REMOVES TIMER WHEN 00:00:00\n  const removeTimerWhenFinished = (id) => {\n    setTimers(timers.filter((timer) => timer.id !== id));\n  };\n\n  return (\n    <div className=\"app\">\n      <NewTimerModal addNewTimer={addNewTimer} timers={timers}/>\n      <div className=\"container\">\n        <div className=\"timers\">\n          {timers.map((time) => (\n            <TimerCard\n              key={time.id}\n              id={time.id}\n              timer={time.timer}\n              title={time.title}\n              removeTimerWhenFinished={removeTimerWhenFinished}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}