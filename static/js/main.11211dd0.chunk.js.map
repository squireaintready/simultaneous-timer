{"version":3,"sources":["Components/NewTimerModal/NewTimerModal.js","Components/Timer/Timer.js","Components/TimerCard/TimerCard.js","App.js","reportWebVitals.js","index.js"],"names":["NewTimerModal","addNewTimer","timers","useState","open","setOpen","newTitle","setNewTitle","hours","setHours","minutes","setMinutes","seconds","setSeconds","btnStyles","setBtnStyles","handleClose","resetAllValues","handleNewTimerChange","e","target","value","length","substring","name","useEffect","backgroundColor","height","paddingBottom","fontSize","background","Button","style","id","color","fullWidth","variant","onClick","Modal","onClose","className","onSubmit","preventDefault","alert","uuidv4","title","timer","parseInt","TextField","label","onChange","type","toString","padStart","Timer","hoursMinSecs","removeTimerFromArr","resetTimer","handleResetTimer","isPaused","hrs","mins","secs","setTime","tick","timerId","setInterval","clearInterval","TimerCard","setResetTimer","setIsPaused","Fab","aria-label","App","setTimers","filter","newTimerObj","prev","map","time","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11211dd0.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport \"./styles.css\";\n\n// import { uuid as v4} from 'uuidv4';\nimport { v4 as uuidv4 } from \"uuid\"\n\n// MUI COMPONENTS\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from '@material-ui/core/TextField'\n\nconst NewTimerModal = ({ addNewTimer, timers }) => {\n  const [open, setOpen] = useState(false);\n  const [newTitle, setNewTitle] = useState('')\n  const [hours, setHours] = useState(0)\n  const [minutes, setMinutes] = useState(0)\n  const [seconds, setSeconds] = useState(0)\n  const [btnStyles, setBtnStyles] = useState({})\n  \n  // OPENS & CLOSES MODAL\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  // REINITIALIZE ALL VALUES TO 0\n  const resetAllValues = () =>{\n    setNewTitle('')\n    setHours(0)\n    setMinutes(0)\n    setSeconds(0)\n  }\n\n  // UPDATES TITLE INPUT onChange\n  const handleNewTitleChange = (e) =>{\n    setNewTitle(e.target.value)\n  }\n\n  // UPDATES TIMER INPUT onChange\n  const handleNewTimerChange = (e) => {\n    // LIMITS USER INPUT TO 2 NUMBERS\n    if(e.target.value.length > 2){\n      e.target.value = e.target.value.substring(1)\n    }\n    if(e.target.name === 'hours'){\n      setHours(e.target.value)\n    }else if (e.target.name === 'minutes' && e.target.value <= 60){\n      setMinutes(e.target.value)\n    }else if (e.target.name === 'seconds' && e.target.value <= 60){\n      setSeconds(e.target.value)\n    }\n  }\n\n  // PUSHES USER FORM DATA UP TO APP\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    if(newTitle.length === 0){\n      alert('Please enter a title')\n    }else if(hours <= 0 && minutes <= 0 && seconds <= 0){\n      alert('Please enter a valid time')\n    }else{\n      addNewTimer({id: uuidv4(), title: newTitle, timer:{hours:parseInt(hours, 10), minutes:parseInt(minutes, 10), seconds:parseInt(seconds, 10)}})\n      handleClose()\n      resetAllValues()\n    }\n  }\n\n  useEffect(() =>{\n    // IF ARRAY IS EMPTY, BTN FULL SCREEN\n    if(timers.length < 1){\n      setBtnStyles({\n        backgroundColor: '#181A18',\n        height: '100vh',\n        paddingBottom: '15rem',\n        fontSize: 'xx-large'\n      })\n    }else{\n      // IF ARRAY CONTAINS VALUES, BTN FIXED TO TOP\n      setBtnStyles({\n        background: 'linear-gradient(to bottom, #0f2027, #203a43, #2c5364)',\n        height: '4.5rem',\n        paddingBottom: '0',\n        fontSize: 'medium'\n      })\n    }\n  }, [timers.length])\n\n\n  return (\n    <div>\n      <Button style={btnStyles} id='createsNewTimer' color='primary' fullWidth={true} variant='contained' onClick={handleOpen}>\n        <AddIcon/>\n        <p>Add new timers</p>\n      </Button>\n      <Modal open={open} onClose={handleClose} className='modal'>\n        <div className='modalContainer'>\n          <form onSubmit={handleSubmit} className='modalForm'>\n            <TextField variant=\"outlined\" label=\"New Title\" value={newTitle} onChange={handleNewTitleChange}/>\n            <div className='modalTimeInputs'>\n              <TextField type=\"number\" name=\"hours\" label=\"hours\" value={hours.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>:\n              <TextField type=\"number\" name=\"minutes\" label=\"minutes\" value={minutes.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>:\n              <TextField type=\"number\" name=\"seconds\" label=\"seconds\" value={seconds.toString().padStart(2, \"0\")} onChange={handleNewTimerChange}/>\n            </div>\n            <Button type='submit' variant='contained' color='primary'>START</Button>\n            <Button onClick={resetAllValues}>Clear</Button>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewTimerModal\n\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\nconst Timer = ({\n  hoursMinSecs,\n  id,\n  removeTimerFromArr,\n  resetTimer,\n  handleResetTimer,\n  isPaused,\n}) => {\n\n  const { hours, minutes, seconds } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = useState([hours, minutes, seconds]);\n\n  // CALLS FUNCTION TO REMOVE TIMER FROM ARR\n  const handleRemovingTimer = () => {\n    removeTimerFromArr(id);\n  };\n\n  // RESET FUNCTION\n  const reset = () => {\n    setTime([\n      parseInt(hours, 10),\n      parseInt(minutes, 10),\n      parseInt(seconds, 10),\n    ]);\n  };\n\n  // INCREMENT 1s TICK\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) {\n      handleRemovingTimer();\n    } else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  // CALLS FUNCTION TO RESET\n  useEffect(() => {\n    if (resetTimer) {\n      handleResetTimer();\n      reset();\n    }\n  });\n\n  // TICK ONLY WHEN isPaused IS FALSE\n  useEffect(() => {\n    if (!isPaused) {\n      const timerId = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerId);\n    }\n  });\n\n  return (\n    <div>\n      <p className=\"timetext\">{`${hrs.toString().padStart(2, \"0\")}:${mins\n        .toString()\n        .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`}</p>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\n\n// CUSTOM COMPONENTS\nimport Timer from \"../Timer/Timer\";\n\n// MUI COMPONENTS\nimport Fab from \"@material-ui/core/Fab\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\n\nconst TimerCard = ({ timer, title, id, removeTimerFromArr }) => {\n  const [resetTimer, setResetTimer] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n\n  // SHOULD RESTART/LOOPS returns BOOL\n  const handleResetTimer = () => {\n    setResetTimer(!resetTimer);\n  };\n\n  // SHOULD PAUSE/PLAYS returns BOOL\n  const pausePlay = () => {\n    setIsPaused(!isPaused);\n  };\n  \n  return (\n    <div className=\"cardContainer\" id={title}>\n      <Timer\n        hoursMinSecs={timer}\n        id={id}\n        removeTimerFromArr={removeTimerFromArr}\n        resetTimer={resetTimer}\n        isPaused={isPaused}\n        handleResetTimer={handleResetTimer}\n      />\n      <hr className=\"cardDivider\" />\n      <h5 className=\"cardTitle\">{title}</h5>\n      <div className=\"cardBtns\">\n        <Fab color=\"secondary\" aria-label=\"add\" onClick={() => removeTimerFromArr(id)}>\n          <CloseIcon fontSize=\"small\"/>\n        </Fab>\n        <Fab color=\"default\" aria-label=\"add\" onClick={handleResetTimer}>\n          <LoopIcon fontSize=\"small\"/>\n        </Fab>\n        <Fab color=\"primary\" aria-label=\"edit\" onClick={pausePlay}>\n          {isPaused ? <PlayArrowIcon fontSize=\"small\"/> : <PauseIcon fontSize=\"small\"/>}\n        </Fab>\n      </div>\n    </div>\n  );\n};\n\nexport default TimerCard;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// CUSTOM COMPONENTS\nimport NewTimerModal from \"./Components/NewTimerModal/NewTimerModal\";\nimport TimerCard from \"./Components/TimerCard/TimerCard\";\n\nfunction App() {\n  const [timers, setTimers] = useState([]);\n\n  // ADDS NEW TIMER TO ARR\n  const addNewTimer = (newTimerObj) => {\n    setTimers((prev) => {\n      return [newTimerObj, ...prev];\n    });\n  };\n\n  // REMOVES TIMER FROM ARR\n  const removeTimerFromArr = (id) => {\n    setTimers(timers.filter((timer) => timer.id !== id));\n  };\n\n  return (\n    <div className=\"app\">\n      <NewTimerModal addNewTimer={addNewTimer} timers={timers} />\n      {timers.length >= 1 ? (\n        <div className=\"container\">\n          <div className=\"timers\">\n            {timers.map((time) => (\n              <TimerCard\n                key={time.id}\n                id={time.id}\n                timer={time.timer}\n                title={time.title}\n                removeTimerFromArr={removeTimerFromArr}\n              />\n            ))}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}